from datetime import datetime

from pyrogram import Client, filters
from pyrogram.types import Message

from src.utils import logger


class BotCommands:
    def __init__(self, bot: Client, monitor_stats_callback: callable):
        self.bot = bot
        self.get_monitor_stats = monitor_stats_callback
        

    def setup_handlers(self):
        
        @self.bot.on_message(filters.command("ping") & filters.private)
        async def ping_command(client: Client, message: Message):
            try:
                stats = self.get_monitor_stats()
                
                uptime = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                
                response = (
                    "üü¢ **Gift Sniper –∞–∫—Ç–∏–≤–µ–Ω**\n\n"
                    f"‚è∞ –í—Ä–µ–º—è: {uptime}\n"
                    f"üîÑ –°—Ç–∞—Ç—É—Å: {'–†–∞–±–æ—Ç–∞–µ—Ç' if stats.get('running', False) else '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n"
                    f"üí∞ –ë–∞–ª–∞–Ω—Å: {stats.get('buyer_balance', 0):,} Stars\n"
                    f"üìä –ü—Ä–æ–≤–µ—Ä–æ–∫: {stats.get('total_checks', 0)}\n"
                    f"üéÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats.get('processed_gifts', 0)}\n"
                    f"üîç –û—Ö–æ—Ç–Ω–∏–∫–æ–≤: {len(stats.get('hunters', []))}"
                )
                
                await message.reply(response)
                logger.info(f"Ping –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
                
            except Exception as e:
                await message.reply("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
                logger.error(f"–û—à–∏–±–∫–∞ ping –∫–æ–º–∞–Ω–¥—ã: {e}")
        